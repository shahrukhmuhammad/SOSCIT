
@model CPCVaultCustodian
@{
    var queryId = ViewContext.RouteData.Values["Id"];
    ViewBag.Title = (queryId == null ? "Add New Vault Custodian" : "Edit Vault Custodian");
    var denomList = ViewBag.DenominationList as List<CPCDenomination>;
}
<form id="lead-frm" class="user-Profile" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.Id)

    <div class="row">
        <div class="col-sm-12 text-right">
            <div class="btn-group" role="group">
                <a href="javascript://" onclick="window.history.back()" class="btn btn-default"><i class="fa fa-close"></i> Cancel / Back</a>
                <button type="submit" id="submit" class="btn btn-success"><i class="fa fa-check"></i> Submit</button>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-sm-12">
            <div class="panel panel-default">
                <div class="panel-body">
                    <h4> Vault Custodian </h4>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="row">
                                <div class="col-sm-4">
                                    <div class="row form-group">
                                        <label class="col-sm-4 text-left horizontal-label">Order Number</label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(x => x.OrderNumber, new { @class = "form-control input-sm", @required = "required", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.OrderNumber)
                                            @Html.HiddenFor(x => x.OrderBookingId)
                                            <a href="javascript://" class="btn btn-sm btn-primary addNewCompany"><i class="fa fa-plus"></i> Select Order</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-4">
                                    <div class="row form-group">
                                        <label class="col-sm-4 text-left horizontal-label">Consignment Number</label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(x => x.SerialNumber, new { @class = "form-control input-sm", @type = "number", @required = "required", @autofocus = "true" })
                                            <span class="duplicate text-danger"></span>
                                            @Html.ValidationMessageFor(m => m.SerialNumber)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-4">
                                    <div class="row form-group">
                                        <label class="col-sm-3 horizontal-label">Date</label>
                                        <div class="col-sm-9">
                                            <input name="Date" id="Date" class="form-control input-sm datePicker" type="text" value="@Model.Date.ToShortDateString()" readonly="readonly" required autocomplete="off">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4">
                                    <div class="row form-group">
                                        <label class="col-sm-4 text-left horizontal-label">Client/Branch</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control input-sm" id="ProjectBranch" readonly />
                                            @Html.HiddenFor(x => x.ProjectBranchId)
                                            @*<select id="ProjectBranchId" name="ProjectBranchId" class="form-control input-sm select2 ProjectBranchId">
                                                    <option> - Select - </option>
                                                </select>*@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-4">
                                    <div class="row form-group">
                                        <label class="col-sm-4 text-left horizontal-label">City</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control input-sm" id="CityName" readonly />
                                            @Html.HiddenFor(x => x.CityId)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-4">
                                    <div class="row form-group">
                                        <label class="col-sm-3 horizontal-label">Supervisor</label>
                                        <div class="col-sm-9">
                                            @Html.DropDownListFor(x => x.SupervisorId, (SelectList)ViewBag.EmployeeList, " Select Employee ", new { @class = "form-control input-sm select2", @required = "required" })
                                            @Html.ValidationMessageFor(m => m.SupervisorId)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-8">
                            <div class="row tb-padding">
                                <table id="mytableUnsorted" class="table table-striped table-bordered table-hover">
                                    <thead>
                                    </thead>
                                    <tr>
                                        <th>Denomination</th>
                                        <th>Volume in Bundles</th>
                                        <th>Amount</th>
                                        <th>Seal No.</th>
                                    </tr>
                                    <tbody>

                                        <tr>
                                            <td>
                                                Rs.10/-
                                                <input type="hidden" name="CPCVaultCustodianDetail[0].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 10).FirstOrDefault().Id)" />
                                            </td>
                                            <td data-id="10">
                                                <input id="numberOfPacketsThree" type="number" value="0" name="CPCVaultCustodianDetail[0].NumberOfBundles" class="form-control input-sm inp totalfinalNumber clearField" />
                                            </td>
                                            <td>
                                                <input id="totalValueThree" type="number" value="0" name="CPCVaultCustodianDetail[0].TotalValue" class="form-control input-sm clearField" />
                                            </td>
                                            <td>
                                                <input id="SealNoThree" type="text" value="0" name="CPCVaultCustodianDetail[0].SealNo" class="form-control input-sm clearField" readonly />
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                Rs.20/-
                                                <input type="hidden" name="CPCVaultCustodianDetail[1].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 20).FirstOrDefault().Id)" />
                                            </td>
                                            <td data-id="20">
                                                <input id="numberOfPacketsFour" type="number" value="0" name="CPCVaultCustodianDetail[1].NumberOfBundles" class="form-control input-sm inp totalfinalNumber clearField" />
                                            </td>
                                            <td>
                                                <input id="totalValueFour" type="number" value="0" name="CPCVaultCustodianDetail[1].TotalValue" class="form-control input-sm clearField" />
                                            </td>
                                            <td>
                                                <input id="SealNoFour" type="text" value="0" name="CPCVaultCustodianDetail[1].SealNo" class="form-control input-sm clearField" readonly />
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                Rs.50/-
                                                <input type="hidden" name="CPCVaultCustodianDetail[2].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 50).FirstOrDefault().Id)" />
                                            </td>
                                            <td data-id="50">
                                                <input id="numberOfPacketsFive" type="number" value="0" name="CPCVaultCustodianDetail[2].NumberOfBundles" class="form-control input-sm inp totalfinalNumber clearField" />
                                            </td>
                                            <td>
                                                <input id="totalValueFive" type="number" value="0" name="CPCVaultCustodianDetail[2].TotalValue" class="form-control input-sm clearField" />
                                            </td>
                                            <td>
                                                <input id="SealNoFive" type="text" value="0" name="CPCVaultCustodianDetail[2].SealNo" class="form-control input-sm clearField" readonly />
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                Rs.100/-
                                                <input type="hidden" name="CPCVaultCustodianDetail[3].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 100).FirstOrDefault().Id)" />
                                            </td>
                                            <td data-id="100">
                                                <input id="numberOfPacketsSix" type="number" value="0" name="CPCVaultCustodianDetail[3].NumberOfBundles" class="form-control input-sm inp totalfinalNumber clearField" />
                                            </td>
                                            <td>
                                                <input id="totalValueSix" type="number" value="0" name="CPCVaultCustodianDetail[3].TotalValue" class="form-control input-sm clearField" />
                                            </td>
                                            <td>
                                                <input id="SealNoSix" type="text" value="0" name="CPCVaultCustodianDetail[3].SealNo" class="form-control input-sm clearField" readonly />
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                Rs.500/-
                                                <input type="hidden" name="CPCVaultCustodianDetail[4].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 500).FirstOrDefault().Id)" />
                                            </td>
                                            <td data-id="500">
                                                <input id="numberOfPacketsSeven" type="number" value="0" name="CPCVaultCustodianDetail[4].NumberOfBundles" class="form-control input-sm inp totalfinalNumber clearField" />
                                            </td>
                                            <td>
                                                <input id="totalValueSeven" type="number" value="0" name="CPCVaultCustodianDetail[4].TotalValue" class="form-control input-sm clearField" />
                                            </td>
                                            <td>
                                                <input id="SealNoSeven" type="text" value="0" name="CPCVaultCustodianDetail[4].SealNo" class="form-control input-sm clearField" readonly />
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                Rs.1000/-
                                                <input type="hidden" name="CPCVaultCustodianDetail[5].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 1000).FirstOrDefault().Id)" />
                                            </td>
                                            <td data-id="1000">
                                                <input id="numberOfPacketsEight" type="number" value="0" name="CPCVaultCustodianDetail[5].NumberOfBundles" class="form-control input-sm inp totalfinalNumber clearField" />
                                            </td>
                                            <td>
                                                <input id="totalValueEight" type="number" value="0" name="CPCVaultCustodianDetail[5].TotalValue" class="form-control input-sm clearField" />
                                            </td>
                                            <td>
                                                <input id="SealNoEight" type="text" value="0" name="CPCVaultCustodianDetail[5].SealNo" class="form-control input-sm clearField" readonly />
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                Rs.5000/-
                                                <input type="hidden" name="CPCVaultCustodianDetail[6].DenominationId" value="@(denomList.Where(x=> x.DenominationTitle == 5000).FirstOrDefault().Id)" />
                                            </td>
                                            <td data-id="5000">
                                                <input id="numberOfPacketsNine" type="number" value="0" name="CPCVaultCustodianDetail[6].NumberOfBundles" class="form-control input-sm inp totalfinalNumber clearField" />
                                            </td>
                                            <td>
                                                <input id="totalValueNine" type="number" value="0" name="CPCVaultCustodianDetail[6].TotalValue" class="form-control input-sm clearField" />
                                            </td>
                                            <td>
                                                <input id="SealNoNine" type="text" value="0" name="CPCVaultCustodianDetail[6].SealNo" class="form-control input-sm clearField" readonly />
                                            </td>
                                        </tr>
                                        <tr>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td> Total </td>
                                            <td><input id="finalTotalNumber" type="number" value="" class="form-control input-sm clearField" readonly="readonly" /> </td>
                                            <td><input id="finalTotalValue" type="number" value="" class="form-control input-sm clearField" readonly="readonly" /> </td>
                                        </tr>
                                    </tbody>
                                </table>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12 text-right">
            <div class="btn-group" role="group">
                <a href="javascript://" onclick="window.history.back()" class="btn btn-default"><i class="fa fa-close"></i> Cancel / Back</a>
                <button type="submit" id="submit" class="btn btn-success"><i class="fa fa-check"></i> Submit</button>
            </div>
        </div>
    </div>
    @Html.HiddenFor(x => x.OrderBookingId)
</form>
<div class="modal fade" id="addNewCompany-Modal" tabindex="-1" role="dialog" aria-labelledby="addNewCompany-Modal" data-backdrop="static">
    <div class="modal-dialog" role="document">
    </div>
</div>

@section scripts{

    <script type="text/javascript">

        var orderId
        function getOrderId(Id) {
            debugger;
            $('#OrderId').val(Id);
            loadOrderData(Id);
            $('#addNewCompany-Modal').modal('toggle');
        }
        function loadOrderData(Id) {
            debugger;
            var finalTotalAmount = 0;
            var finalTotalBundles = 0;
            if (Id) {
                $.get('/CPC/UnsortedCash/GetUnsortedCash/' + Id, function (response) {
                    if (response) {
                        $('#ProjectBranch').val(response.BranchName);
                        $('#ProjectBranchId').val(response.ProjectBranchId);
                        $('#CityId').val(response.CityId);
                        $('#CityName').val(response.CityName);
                        $('#OrderNumber').val(response.OrderNumber);
                        $('#OrderBookingId').val(response.OrderBookingId);

                        $.each(response.Details, function (index, item) {
                                
                                if (item.DenominationTitle == '10') {
                                    $("#numberOfPacketsThree").val(item.NumberOfBundles);
                                    $("#totalValueThree").val(item.TotalValue);
                                    $("#SealNoThree").val(item.SealNo);
                                    finalTotalBundles += parseInt(item.NumberOfBundles);
                                    finalTotalAmount += parseInt(item.TotalValue);
                                }
                                else if (item.DenominationTitle == '20') {
                                    $("#numberOfPacketsFour").val(item.NumberOfBundles);
                                    $("#totalValueFour").val(item.TotalValue);
                                    $("#SealNoFour").val(item.SealNo);
                                    finalTotalBundles += parseInt(item.NumberOfBundles);
                                    finalTotalAmount += parseInt(item.TotalValue);
                                }
                                else if (item.DenominationTitle == '50') {
                                    $("#numberOfPacketsFive").val(item.NumberOfBundles);
                                    $("#totalValueFive").val(item.TotalValue);
                                    $("#SealNoFive").val(item.SealNo);
                                    finalTotalBundles += parseInt(item.NumberOfBundles);
                                    finalTotalAmount += parseInt(item.TotalValue);
                                }
                                else if (item.DenominationTitle == '100') {
                                    $("#numberOfPacketsSix").val(item.NumberOfBundles);
                                    $("#totalValueSix").val(item.TotalValue);
                                    $("#SealNoSix").val(item.SealNo);
                                    finalTotalBundles += parseInt(item.NumberOfBundles);
                                    finalTotalAmount += parseInt(item.TotalValue);
                                }
                                else if (item.DenominationTitle == '500') {
                                    $("#numberOfPacketsSeven").val(item.NumberOfBundles);
                                    $("#totalValueSeven").val(item.TotalValue);
                                    $("#SealNoSeven").val(item.SealNo);
                                    finalTotalBundles += parseInt(item.NumberOfBundles);
                                    finalTotalAmount += parseInt(item.TotalValue);
                                }
                                else if (item.DenominationTitle == '1000') {
                                    $("#numberOfPacketsEight").val(item.NumberOfBundles);
                                    $("#totalValueEight").val(item.TotalValue);
                                    $("#SealNoEight").val(item.SealNo);
                                    finalTotalBundles += parseInt(item.NumberOfBundles);
                                    finalTotalAmount += parseInt(item.TotalValue);
                                }
                                else if (item.DenominationTitle == '5000') {
                                    $("#numberOfPacketsNine").val(item.NumberOfBundles);
                                    $("#totalValueNine").val(item.TotalValue);
                                    $("#SealNoNine").val(item.SealNo);
                                    finalTotalBundles += parseInt(item.NumberOfBundles);
                                    finalTotalAmount += parseInt(item.TotalValue);
                                }
                                $("#finalTotalNumber").val(finalTotalBundles);
                                $("#finalTotalValue").val(finalTotalAmount);
                            });
                    }
                    else {
                        //$('.duplicate').html('');
                        //isSubmit = true;
                    }
                });
            }
        }

        $('.ProjectBranchId').change(function (e) {
            $(".clearField").val("0");
            var finalTotalAmount = 0;
            var finalTotalBundles = 0;
            var OrderBookingId = $("#OrderBookingId").val();
            const ProjectBranchId = $('#ProjectBranchId option:selected').attr('value');
            $.get('/CPC/UnsortedCash/GetAnnxureIBookingData?Id=' + OrderBookingId, function (response) {
                if (response) {
                    $.each(response.Details,
                        function (index, item) {
                            $('#CityName').val(item.CityName);
                            $('#CityId').val(item.CityId);
                            branchtoAppend.empty();
                            branchtoAppend.append(new Option(" - Select - ", "0"));
                            if (item.DenominationTitle == '10') {
                                $("#numberOfPacketsThree").val(item.NumberOfBundles);
                                $("#totalValueThree").val(item.TotalValue);
                                $("#SealNoThree").val(item.SealNo);
                                finalTotalBundles += parseInt(item.NumberOfBundles);
                                finalTotalAmount += parseInt(item.TotalValue);
                            }
                            else if (item.DenominationTitle == '20') {
                                $("#numberOfPacketsFour").val(item.NumberOfBundles);
                                $("#totalValueFour").val(item.TotalValue);
                                $("#SealNoFour").val(item.SealNo);
                                finalTotalBundles += parseInt(item.NumberOfBundles);
                                finalTotalAmount += parseInt(item.TotalValue);
                            }
                            else if (item.DenominationTitle == '50') {
                                $("#numberOfPacketsFive").val(item.NumberOfBundles);
                                $("#totalValueFive").val(item.TotalValue);
                                $("#SealNoFive").val(item.SealNo);
                                finalTotalBundles += parseInt(item.NumberOfBundles);
                                finalTotalAmount += parseInt(item.TotalValue);
                            }
                            else if (item.DenominationTitle == '100') {
                                $("#numberOfPacketsSix").val(item.NumberOfBundles);
                                $("#totalValueSix").val(item.TotalValue);
                                $("#SealNoSix").val(item.SealNo);
                                finalTotalBundles += parseInt(item.NumberOfBundles);
                                finalTotalAmount += parseInt(item.TotalValue);
                            }
                            else if (item.DenominationTitle == '500') {
                                $("#numberOfPacketsSeven").val(item.NumberOfBundles);
                                $("#totalValueSeven").val(item.TotalValue);
                                $("#SealNoSeven").val(item.SealNo);
                                finalTotalBundles += parseInt(item.NumberOfBundles);
                                finalTotalAmount += parseInt(item.TotalValue);
                            }
                            else if (item.DenominationTitle == '1000') {
                                $("#numberOfPacketsEight").val(item.NumberOfBundles);
                                $("#totalValueEight").val(item.TotalValue);
                                $("#SealNoEight").val(item.SealNo);
                                finalTotalBundles += parseInt(item.NumberOfBundles);
                                finalTotalAmount += parseInt(item.TotalValue);
                            }
                            else if (item.DenominationTitle == '5000') {
                                $("#numberOfPacketsNine").val(item.NumberOfBundles);
                                $("#totalValueNine").val(item.TotalValue);
                                $("#SealNoNine").val(item.SealNo);
                                finalTotalBundles += parseInt(item.NumberOfBundles);
                                finalTotalAmount += parseInt(item.TotalValue);
                            }
                            $("#finalTotalNumber").val(finalTotalBundles);
                            $("#finalTotalValue").val(finalTotalAmount);
                    });
                }
            });
        });


        $(document).ready(function () {

            //Add Shipping Company
            $('.addNewCompany').on('click', function () {
                $('#loading-mask').show();
                var target = "";
                target = "/CPC/UnsortedCash/_UnsortedCashList";
                // load the url and show modal on success
                $("#addNewCompany-Modal .modal-dialog").load(target, function () {
                    $("#addNewCompany-Modal").modal("show");
                    filterDataTable("#UnsortedCash-dataTable", [0, 1, 2, 3, 4], [5]);
                    $('#loading-mask').hide();
                });
            });
            //"#DateOfCashReturn"
            $("#Date").data("DateTimePicker").date(moment('@Model.Date.ToShortDateString()'));

            $(".select2").select2();

            //input fields leave event
            $(document).on('focusout', '.inp', function (e) {
                e.preventDefault();
                accountGridRowIndex = $(this).closest('td').attr("data-id");
                const totalValue = GetTotalVal($(this).val(), accountGridRowIndex);
                $(this).closest('td').next('td').find('input').val(totalValue);


                var finalTotalValue = parseInt($("#totalValueZero").val()) + parseInt($("#totalValueOne").val()) + parseInt($("#totalValueTwo").val())
                    + parseInt($("#totalValueThree").val()) + parseInt($("#totalValueFour").val()) + parseInt($("#totalValueFive").val())
                    + parseInt($("#totalValueSix").val()) + parseInt($("#totalValueSeven").val()) + parseInt($("#totalValueEight").val())
                    + parseInt($("#totalValueNine").val());
                $("#finalTotalValue").val(finalTotalValue);

            });



        });

        function GetTotalVal(unsortedValue, denomVal) {
            const totalVal = parseInt(unsortedValue) * parseInt(denomVal) * 1000;
            return isNaN(totalVal) ? '0' : totalVal;
        }

        $(".totalfinalNumber").focusout(function () {
            var finalTotalNumber = parseInt($("#numberOfPacketsZero").val()) + parseInt($("#numberOfPacketsOne").val()) + parseInt($("#numberOfPacketsTwo").val())
                + parseInt($("#numberOfPacketsThree").val()) + parseInt($("#numberOfPacketsFour").val()) + parseInt($("#numberOfPacketsFive").val())
                + parseInt($("#numberOfPacketsSix").val()) + parseInt($("#numberOfPacketsSeven").val()) + parseInt($("#numberOfPacketsEight").val())
                + parseInt($("#numberOfPacketsNine").val());
            $("#finalTotalNumber").val(finalTotalNumber);
        });
    </script>
}

